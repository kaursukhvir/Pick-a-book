{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sukhvir Kaur\\\\Downloads\\\\redux-cart\\\\redux-cart\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { cartActions, cartBoxActions } from \"./store/index\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initialVal = false;\n\nconst getCartData = async () => {\n  const response = await fetch(\"https://meals-7ca17-default-rtdb.firebaseio.com/cart.json\");\n  if (!response.ok) throw new Error(\"Could not get data\");\n  const data = await response.json();\n  return data;\n};\n\nfunction App() {\n  _s();\n\n  const cartShow = useSelector(state => state.cart.cartShow);\n  const cart = useSelector(state => state.cartBox);\n  const notification = useSelector(state => state.cart.notification);\n  const dispatch = useDispatch();\n\n  const fetchData = () => {\n    try {\n      getCartData().then(data => dispatch(cartBoxActions.replaceCart(data)));\n    } catch (err) {\n      dispatch(cartActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"cannot fetch cart data\"\n      }));\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const cartData = async () => {\n      dispatch(cartActions.showNotification({\n        status: \"pending\",\n        title: \"sending..\",\n        message: \"sending cart data\"\n      }));\n      const response = await fetch(\"https://meals-7ca17-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) throw new Error(\"sending data failed\");\n      dispatch(cartActions.showNotification({\n        status: \"success\",\n        title: \"success\",\n        message: \"sent cart data successfullly\"\n      }));\n    };\n\n    if (!initialVal) {\n      initialVal = true;\n      return;\n    }\n\n    cartData().catch(err => {\n      dispatch(cartActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"could'nt send cart data\"\n      }));\n    });\n    /*fetch(\"https://meals-7ca17-default-rtdb.firebaseio.com/cart.json\", {\n      method: \"PUT\",\n      body: JSON.stringify(cart),\n    })\n      .then((response) => {\n        response.json();\n      })\n      .then((responseData) => console.log(responseData));*/\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [cartShow && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"HW5nFem7P2JAVZpXNgg6Dk5K0Ig=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Sukhvir Kaur/Downloads/redux-cart/redux-cart/src/App.js"],"names":["useEffect","useSelector","useDispatch","cartActions","cartBoxActions","Cart","Layout","Products","Notification","initialVal","getCartData","response","fetch","ok","Error","data","json","App","cartShow","state","cart","cartBox","notification","dispatch","fetchData","then","replaceCart","err","showNotification","status","title","message","cartData","method","body","JSON","stringify","catch"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { cartActions, cartBoxActions } from \"./store/index\";\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\n\nlet initialVal = false;\n\nconst getCartData = async () => {\n  const response = await fetch(\n    \"https://meals-7ca17-default-rtdb.firebaseio.com/cart.json\"\n  );\n  if (!response.ok) throw new Error(\"Could not get data\");\n  const data = await response.json();\n  return data;\n};\n\nfunction App() {\n  const cartShow = useSelector((state) => state.cart.cartShow);\n  const cart = useSelector((state) => state.cartBox);\n  const notification = useSelector((state) => state.cart.notification);\n  const dispatch = useDispatch();\n\n  const fetchData = () => {\n    try {\n      getCartData().then((data) => dispatch(cartBoxActions.replaceCart(data)));\n    } catch (err) {\n      dispatch(\n        cartActions.showNotification({\n          status: \"error\",\n          title: \"Error\",\n          message: \"cannot fetch cart data\",\n        })\n      );\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const cartData = async () => {\n      dispatch(\n        cartActions.showNotification({\n          status: \"pending\",\n          title: \"sending..\",\n          message: \"sending cart data\",\n        })\n      );\n      const response = await fetch(\n        \"https://meals-7ca17-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n\n      if (!response.ok) throw new Error(\"sending data failed\");\n\n      dispatch(\n        cartActions.showNotification({\n          status: \"success\",\n          title: \"success\",\n          message: \"sent cart data successfullly\",\n        })\n      );\n    };\n\n    if (!initialVal) {\n      initialVal = true;\n      return;\n    }\n\n    cartData().catch((err) => {\n      dispatch(\n        cartActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"could'nt send cart data\",\n        })\n      );\n    });\n\n    /*fetch(\"https://meals-7ca17-default-rtdb.firebaseio.com/cart.json\", {\n      method: \"PUT\",\n      body: JSON.stringify(cart),\n    })\n      .then((response) => {\n        response.json();\n      })\n      .then((responseData) => console.log(responseData));*/\n  }, [cart, dispatch]);\n\n  return (\n    <>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {cartShow && <Cart />}\n        <Products />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}