{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartBoxSlice = createSlice({\n  name: \"cartBox\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          quantity: 1,\n          price: newItem.price,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice += newItem.price;\n      }\n\n      state.totalQuantity++;\n    },\n\n    removeFromCart(state, action) {\n      const newId = action.payload;\n      const existingItem = state.items.find(item => item.id === newId);\n\n      if (existingItem && existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== newId);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice -= existingItem.price;\n      }\n\n      state.totalQuantity--;\n    }\n\n  }\n});\nexport default cartBoxSlice;","map":{"version":3,"sources":["C:/Users/Sukhvir Kaur/Downloads/redux-cart/redux-cart/src/store/cartBox-slice.js"],"names":["createSlice","cartBoxSlice","name","initialState","items","totalQuantity","reducers","replaceCart","state","action","payload","addToCart","newItem","existingItem","find","item","id","push","quantity","price","totalPrice","title","removeFromCart","newId","filter"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAGD,WAAW,CAAC;AAC/BE,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,aAAa,EAAE;AAFH,GAFiB;AAM/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzBD,MAAAA,KAAK,CAACH,aAAN,GAAsBI,MAAM,CAACC,OAAP,CAAeL,aAArC;AACAG,MAAAA,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACC,OAAP,CAAeN,KAA7B;AACD,KAJO;;AAKRO,IAAAA,SAAS,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACvB,YAAMG,OAAO,GAAGH,MAAM,CAACC,OAAvB;AACA,YAAMG,YAAY,GAAGL,KAAK,CAACJ,KAAN,CAAYU,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAA/C,CAArB;;AACA,UAAI,CAACH,YAAL,EAAmB;AACjBL,QAAAA,KAAK,CAACJ,KAAN,CAAYa,IAAZ,CAAiB;AACfD,UAAAA,EAAE,EAAEJ,OAAO,CAACI,EADG;AAEfE,UAAAA,QAAQ,EAAE,CAFK;AAGfC,UAAAA,KAAK,EAAEP,OAAO,CAACO,KAHA;AAIfC,UAAAA,UAAU,EAAER,OAAO,CAACO,KAJL;AAKfjB,UAAAA,IAAI,EAAEU,OAAO,CAACS;AALC,SAAjB;AAOD,OARD,MAQO;AACLR,QAAAA,YAAY,CAACK,QAAb;AACAL,QAAAA,YAAY,CAACO,UAAb,IAA2BR,OAAO,CAACO,KAAnC;AACD;;AACDX,MAAAA,KAAK,CAACH,aAAN;AACD,KArBO;;AAsBRiB,IAAAA,cAAc,CAACd,KAAD,EAAQC,MAAR,EAAgB;AAC5B,YAAMc,KAAK,GAAGd,MAAM,CAACC,OAArB;AACA,YAAMG,YAAY,GAAGL,KAAK,CAACJ,KAAN,CAAYU,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYO,KAAvC,CAArB;;AACA,UAAIV,YAAY,IAAIA,YAAY,CAACK,QAAb,KAA0B,CAA9C,EAAiD;AAC/CV,QAAAA,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYoB,MAAZ,CAAoBT,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYO,KAAzC,CAAd;AACD,OAFD,MAEO;AACLV,QAAAA,YAAY,CAACK,QAAb;AACAL,QAAAA,YAAY,CAACO,UAAb,IAA2BP,YAAY,CAACM,KAAxC;AACD;;AACDX,MAAAA,KAAK,CAACH,aAAN;AACD;;AAhCO;AANqB,CAAD,CAAhC;AA0CA,eAAeJ,YAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartBoxSlice = createSlice({\r\n  name: \"cartBox\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n  },\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n    addToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          quantity: 1,\r\n          price: newItem.price,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice += newItem.price;\r\n      }\r\n      state.totalQuantity++;\r\n    },\r\n    removeFromCart(state, action) {\r\n      const newId = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newId);\r\n      if (existingItem && existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== newId);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice -= existingItem.price;\r\n      }\r\n      state.totalQuantity--;\r\n    },\r\n  },\r\n});\r\n\r\nexport default cartBoxSlice;\r\n"]},"metadata":{},"sourceType":"module"}